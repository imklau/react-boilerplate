#!/usr/bin/env node

/* eslint-disable no-console */
const fs = require('fs')
const { exec, execSync } = require('child_process')
const editJsonFile = require('edit-json-file')
const { redBright, whiteBright, greenBright } = require('chalk')
const { Command } = require('commander')

const program = new Command()

const GIT_REPO = 'git@github.com:Noeemi/react-app.git'

program.option('-ts, --typescript', 'a boilerplate with TypeScript settings')

program
  .arguments('<project-name>')
  .description('', {
    'project-name': 'your project name',
  })
  .action((projectName) => {
    if (fs.existsSync(`./${projectName}`)) {
      console.log(`
    ❗️ The directory ${whiteBright(projectName)} exists. Try using a new project name.
      `)
      return
    }

    const options = program.opts()

    console.log(`
    ✨ Initializing project...`)

    // clone the whole repo
    execSync(`git clone ${GIT_REPO} ${projectName} -q`)

    // copy the template files
    execSync(`cd ${projectName} && cp -r packages/react${options.typescript ? '-ts/' : '/'} .`)

    // remove unnecessary files
    execSync(`cd ${projectName} && rm -r bin && rm -r packages && rm README.md && rm LICENSE.md`)

    console.log(`
      Installing dependencies - it might take a few minutes...`)

    exec(`cd ${projectName} && yarn`, (err) => {
      if (err) {
        console.error(
          redBright(`Some error while installing dependencies ${err}`),
        )
        return
      }

      const packageJson = editJsonFile(`${projectName}/package.json`)

      packageJson.set('name', projectName)
      packageJson.save()

      console.log(
        greenBright(`
      ✓ All done!`),
      )

      console.log(`
      Your project is now ready.
      Use the commands below to run the app.`)

      console.log(
        whiteBright(`
      cd ${projectName}
      yarn start
        `),
      )
    })
  })

program.parse()
